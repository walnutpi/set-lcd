#!/bin/bash
if [ -z "$1" ]; then
    echo -e "\033[31m[Error]\033[0m"
    echo "please choose tft"
    exit 1
fi
if [ -z "$2" ]; then
    echo -e "\033[31m[Error]\033[0m"
    echo "please choose Function"
    exit 1
fi



PATH_PWD="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"
PATH_TFT="${PATH_PWD}/tft"
PATH_CONF="${PATH_PWD}/xorg-conf"
source ${PATH_PWD}/common.sh
source $release_file > /dev/null 2>&1

TFT_NAME=$1
PATH_NOW_TFT="${PATH_TFT}/${TFT_NAME}"
PATH_DTB="${PATH_NOW_TFT}/dtb"


if [ -f ${PATH_NOW_TFT}/tft ]; then
    source ${PATH_NOW_TFT}/tft
fi

Board_model="walnutpi-"
if [[ -f /proc/device-tree/model ]]; then
    Board_model=$(tr -d '\0' < /proc/device-tree/model)
fi


set -e


set_rotate_switch="0 90 180 270"
set_rotate() {
    OPT_operate=$1
    PATH_calibration="${PATH_NOW_TFT}/xorg-calibration"
    
    if [[ ! $set_rotate_switch =~ (^|[[:space:]])$OPT_operate($|[[:space:]]) ]]; then
        echo -e "\033[31m[Error]\033[0m"
        echo "error angle"
        exit 1
    fi
    
    if [ -d "/etc/X11/xorg.conf.d/" ]; then
        if [ -f  ${PATH_calibration}/calibration.conf-${OPT_operate} ]; then
            cp -rf "${PATH_calibration}/calibration.conf-${OPT_operate}"  /etc/X11/xorg.conf.d/99-calibration.conf
        fi
    fi
    
    dts_files=$(find "$PATH_DTB" -type f -name "*${TFT_DTS_NAME}.dts")
    for dts_file in $dts_files; do
        _dtb_replace_value $dts_file "rotate" $OPT_operate
    done
    _updoad_dtbo $PATH_DTB
    set-device
}


_remove_desktop() {
    target_path="/usr/share/X11/xorg.conf.d"
    if [ -d "$target_path" ]; then
        for conf_file in ${USE_CONF_FILE[@]};
        do
            rm -rf  $target_path/${conf_file}
        done
    fi
    
}


_disable_other() {
    local all_board=$(ls -d $PATH_TFT/*/ | sed 's#/##' )
    local board
    for board in ${all_board[@]};
    do
        board=$(basename $board)
        if [[ $board != $TFT_NAME ]];then
            _try_command set-lcd $board remove > /dev/null 2>&1
        fi
    done
}

install() {
    _disable_other
    source ${PATH_PWD}/compile_driver.sh
    if [ $TFT_NAME == $FLAG_HDMI ];then
        return
    fi
    _updoad_dtbo $PATH_DTB
    set-device enable $TFT_DTS_NAME
    _try_command set-device disable spidev1_0
    _try_command set-device disable spidev1_1
    # 启用驱动
    for module in ${TFT_MODULE[@]}
    do
        _enable_modules $module
    done
    # 判断文件/boot/config.txt中是否有一行是hdmi_force_hotplug=1 如果有则改为hdmi_force_hotplug=0
    if grep -q "hdmi_force_hotplug=1" /boot/config.txt; then
        sed -i 's/hdmi_force_hotplug=1/hdmi_force_hotplug=0/g' /boot/config.txt
    fi
    

    target_path="/usr/share/X11/xorg.conf.d/"
    
    if [ -d "$target_path" ]; then
        for conf_file in ${USE_CONF_FILE[@]};
        do
            cp ${PATH_CONF}/${conf_file} $target_path
        done
    fi
    
    set_rotate 270
    _flag_modify $TFT_NAME

}


remove() {
    _remove_desktop
    _flag_modify $FLAG_HDMI
    # 删除对指定驱动的调用
    for module in ${TFT_MODULE[@]}
    do
        _disable_modules $module
    done

    set-device disable $TFT_DTS_NAME
    # 判断文件/boot/config.txt中是否有一行是#hdmi_force_hotplug=0 如果有则改为hdmi_force_hotplug=1
    if grep -q "hdmi_force_hotplug=0" /boot/config.txt; then
        sed -i 's/hdmi_force_hotplug=0/hdmi_force_hotplug=1/g' /boot/config.txt
    fi

}

if [[ $EUID -ne 0 ]]; then
    echo -e "\n\tError:  please run as root!\n"
    exit 1
fi





FUNCTION_NAME=$2
ARGUMENT=$3
$FUNCTION_NAME $ARGUMENT

if [[ $? -ne 0 ]]; then
    exit 1
fi
echo -e "\033[32m[ok]\033[0m \tplease reboot\n"